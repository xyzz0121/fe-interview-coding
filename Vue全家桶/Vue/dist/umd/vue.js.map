{"version":3,"file":"vue.js","sources":["../../src/util.js","../../src/observer/array.js","../../src/observer/index.js","../../src/state.js","../../src/init.js","../../src/index.js"],"sourcesContent":["//访问和设置vm，代理到访问和设置vm[data]\nexport function proxy(vm, data, key) {\n    Object.defineProperty(vm, key, {\n        get(){\n            return vm[data][key]\n        },\n        set(newValue){\n            vm[data][key] = newValue\n        }\n    })\n}\n//添加不可枚举、不可遍历的属性\nexport function defineProperty(data, key, value) {\n    Object.defineProperty(data, key, {\n        enumerable: false, //不可枚举，不能被循环出来，相当于隐藏属性\n        configurable: false,\n        value\n    })\n}","/**\n * 重写数组方法\n * 思路：先继承，后重写，用的时候，先找实例\n */\n\nconst oldArrayProtoMethods = Array.prototype;\n\nexport const arrayMethods = Object.create(oldArrayProtoMethods);\n\nconst methods = [\n    \"push\",\n    \"pop\",\n    \"shift\",\n    \"unshift\",\n    \"sort\",\n    \"reverse\",\n    \"splice\",\n];\n//先走自己的逻辑，然后调用原来的逻辑\nmethods.forEach(method => {\n    arrayMethods[method] = function (...args) {\n        console.log(\"数组方法被调用了\", method);\n        const ob = this.__ob__;\n        const result = oldArrayProtoMethods[method].apply(this, args); //this 就是 observer constructor里的data\n        let inserted;\n        //数组增加项，有可能是对象类型，应该再次被观测\n        switch (method) {\n            case \"push\":\n            case \"unshift\":\n                inserted = args;\n                break;\n            case \"splice\":\n                inserted = args.slice(2);\n            default:\n                break;\n        }\n        if (inserted) {\n            ob.observeArray(inserted);\n        }\n\n        return result;\n    }\n})","import { defineProperty } from \"../util\";\nimport { arrayMethods } from \"./array\";\n\n/**\n * 用 defineProperty 递归把data所有属性都变成响应式\n */\nclass Observer{\n    constructor(data){\n        //hack骚操作，把observeArray挂在调用函数的this上，在array.js里还可以使用。同时也可以标记对象或者数组已经被观测。\n        defineProperty(data, \"__ob__\", this);\n        //一步一步把defineProperty全都重新定义一下 使原来的对象每个属性发生变化的时候 都能get到，也就是将一个普通对象变成一个响应式对象\n        if (Array.isArray(data)) {\n            //函数劫持\n            data.__proto__ = arrayMethods;\n            //如果数组里嵌套对象，还需要监控对象\n            this.observeArray(data);\n        } else {\n            this.walk(data);\n        }\n    }\n    observeArray(data){\n        data.forEach(item => {\n            observe(item);\n        })\n    }\n    walk(data){\n        const keys = Object.keys(data);\n        keys.forEach(key => {\n            defineReactive(data, key, data[key]); \n        })\n    }\n}\n//Vue.util.defineReactive 把对象的某个属性变成响应式\nfunction defineReactive(data, key, value) {\n    observe(value);\n    Object.defineProperty(data, key, {\n        get(){\n            console.log(\"获取\", key, value);\n            return value\n        },\n        set(newValue){\n            console.log(\"设置\", key, value);\n            if(value === newValue) return ;\n            observe(newValue);\n            value = newValue;\n        }\n    })\n}\n\n\n\nexport function observe(data) {\n    if(typeof data !== \"object\" || data == null || data.__ob__){\n        return ;\n    }\n    return new Observer(data);\n}","import { observe } from \"./observer/index\";\nimport { proxy } from \"./util\";\n\nexport function initState(vm) {\n    const opts = vm.$options;\n    //按照优先级先后初始化，如果后面的和前面的重名了，怎么怎么样\n    if (opts.props) {\n        initProps(vm);\n    }\n    if (opts.methods) {\n        initMethods(vm);\n    }\n    if (opts.data) {\n        initData(vm);\n    }\n    if (opts.watch) {\n        initWatch(vm);\n    }\n    if (opts.computed) {\n        initComputed(vm);\n    }\n}\n\nfunction initProps() {}\n\nfunction initMethods() {}\n\nfunction initData(vm) {\n    let data = vm.$options.data;\n    vm._data = data = typeof data ? data.call(vm) : data;\n\n    //把vm.arr 代理到 vm._data.arr 实现真正的获取data\n    for (const key in data) {\n        proxy(vm, \"_data\", key);\n    }\n    //有对象了 就要劫持 \n    //对象的劫持方案：object.defineProperty();\n    //对象里嵌套数组的劫持方案: 单独处理\n    observe(data);\n}\n\nfunction initWatch() {}\n\nfunction initComputed() {}","import { initState } from \"./state\";\n\nexport function initMixin(Vue) {\n    Vue.prototype._init = function (options) {\n        const vm = this;\n        vm.$options = options;\n        //所有初始化操作，都在initState里\n        initState(vm);\n        // initEvents();\n    }\n}","import { initMixin } from \"./init\";\n\n/**\n * Vue 类的声明\n * @param {object} options 用户 new Vue() 时传的配置对象\n */\nfunction Vue(options) {\n    this._init(options);\n}\n\n//Vue把原型方法拆成一个一个又一个的插件，利于拆分，结构拆分，所有原型拓展都在这里\n\n//插件1：初始化操作都在这里\ninitMixin(Vue);\n\nexport default Vue;"],"names":["proxy","vm","data","key","Object","defineProperty","get","set","newValue","value","enumerable","configurable","oldArrayProtoMethods","Array","prototype","arrayMethods","create","methods","forEach","method","console","log","ob","__ob__","args","result","apply","inserted","slice","observeArray","Observer","isArray","__proto__","walk","item","observe","keys","defineReactive","initState","opts","$options","props","initData","watch","computed","_data","call","initMixin","Vue","_init","options"],"mappings":"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"}